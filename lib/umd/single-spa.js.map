{"version":3,"file":"single-spa.js","sources":["../../src/applications/app.helpers.js","../../src/start.js","../../src/lifecycles/load.js","../../src/lifecycles/unmount.js","../../src/lifecycles/bootstrap.js","../../src/lifecycles/mount.js","../../src/navigations/navigator-events.js","../../src/navigations/reroute.js","../../src/applications/app.js"],"sourcesContent":["// 生命周期\nexport const NOT_LOADED = 'NOT_LOADED';// 应用初始状态\nexport const LOADING_SOURCE_CODE ='LOADING_SOURCE_CODE'; // 加载资源\nexport const NOT_BOOTSTRAPPED = 'NOT_BOOTSTRAPPED'; // 还没有调用bootstrap方法\nexport const BOOTSTRAPPING = 'BOOTSTRAPPING'; // 启动中\nexport const NOT_MOUNTED = 'NOT_MOUNTED';// 没有调用mount方法\nexport const MOUNTING = 'MOUNTING'; // 正在挂载中\nexport const MOUNTED = 'MOUNTED'; // 挂载完毕\nexport const UPDATINMG = 'UPDATINMG'; // 更新中\nexport const UNMOUNTING = 'UNMOUNTING' // 解除挂载\nexport const UNLOADING = 'UNLOADING'// 完全卸载中\nexport const LOAD_ERR = 'LOAD_ERR';\nexport const SKIP_BECAUSE_BROKEN = 'SKIP_BECAUSE_BROKEN';\n\n// 当前应用是否被激活\nexport function isActive(app){\n    return app.status === MOUNTED\n}\n// 当前这个应用是否要被激活\nexport function shouldBeActive(app){ //如果返回true 那么应用应该就开始初始化等一系列操作\n   return app.activeWhen(window.location)\n}","import { reroute } from \"./navigations/reroute\";\n\n\nexport let started = false\nexport function start(){\n    // 需要挂载应用\n    started = true;\n    reroute(); // 除了去加载应用还需要去挂载应用\n}","import { LOADING_SOURCE_CODE, NOT_BOOTSTRAPPED } from \"../applications/app.helpers\";\n\nfunction flattenFnArray(fns) {\n    fns = Array.isArray(fns) ? fns : [fns];\n    // 通过promise链来链式调用  多个方法组合成一个方法\n    return (props) => fns.reduce((p, fn) => p.then(() => fn(props)), Promise.resolve());\n}\n\n\nexport async function toLoadPromise(app) {\n    if (app.loadPromise) {\n        return app.loadPromise; //缓存机制\n    }\n    return (app.loadPromise = Promise.resolve().then(async () => {\n        app.status = LOADING_SOURCE_CODE;\n        let { bootstrap, mount, unmount } = await app.loadApp(app.customProps);\n        app.status = NOT_BOOTSTRAPPED; // 没有调用bootstrap方法\n        // 我希望将多个promise组合在一起 compose\n        app.bootstrap = flattenFnArray(bootstrap);\n        app.mount = flattenFnArray(mount);\n        app.unmount = flattenFnArray(unmount);\n        delete app.loadPromise;\n        return app;\n    }))\n}","import { MOUNTED, UNMOUNTING, NOT_MOUNTED } from \"../applications/app.helpers\";\nexport async function toUnmountPromise(app) {\n    // 当前应用没有被挂载直接什么都不做了\n    if (app.status != MOUNTED) {\n        return app;\n    }\n    app.status = UNMOUNTING;\n    await app.unmount(app.customProps)\n    app.status = NOT_MOUNTED;\n    return app;\n}","import { NOT_BOOTSTRAPPED, BOOTSTRAPPING, NOT_MOUNTED } from \"../applications/app.helpers\";\n\nexport async function toBootstrapPromise(app) {\n    if(app.status !== NOT_BOOTSTRAPPED){\n        return app;\n    }\n    app.status = BOOTSTRAPPING;\n    await app.bootstrap(app.customProps);\n    app.status = NOT_MOUNTED;\n    return app;\n}","import { NOT_MOUNTED, MOUNTING, MOUNTED } from \"../applications/app.helpers\";\n\nexport async function toMountPromise(app){\n    if(app.status !== NOT_MOUNTED){\n        return app;\n    }\n    app.status = MOUNTING;\n    await app.mount(app.customProps);\n    app.status = MOUNTED;\n    return app;\n}\n\n\n","// hashchange   popstate\n\nimport { reroute } from \"./reroute\";\n\nexport const routingEventsListeningTo = ['hashchange', 'popstate'];\n\nfunction urlReroute() {\n    reroute([], arguments); // 会根据路径重新加载不同的应用\n}\nconst capturedEventListeners = { // 后续挂载的事件先暂存起来\n    hashchange: [],\n    popstate: [] // 当应用切换完成后可以调用\n}\n\n// 我们处理应用加载的逻辑是在最前面\nwindow.addEventListener('hashchange', urlReroute);\nwindow.addEventListener('popstate', urlReroute);\nconst originalAddEventListener = window.addEventListener;\nconst originalRemoveEventListener = window.removeEventListener;\nwindow.addEventListener = function(eventName, fn) {\n    if (routingEventsListeningTo.indexOf(eventName) >= 0 && !capturedEventListeners[eventName].some(listener => listener == fn)) {\n        capturedEventListeners[eventName].push(fn);\n        return;\n    }\n    return originalAddEventListener.apply(this, arguments)\n}\nwindow.removeEventListener = function(eventName, fn) {\n    if (routingEventsListeningTo.indexOf(eventName) >= 0) {\n        capturedEventListeners[eventName] = capturedEventListeners[eventName].filter(l => l !== fn);\n        return;\n    }\n    return originalRemoveEventListener.apply(this, arguments)\n}\n\n// 如果是hash路由 hash变化时可以切换 \n// 浏览器路由，浏览器路由是h5api的 如果切换时不会触发popstate\n\nfunction patchedUpdateState(updateState,methodName){\n    return function(){\n        const urlBefore = window.location.href;\n        updateState.apply(this,arguments); // 调用切换方法\n        const urlAfter = window.location.href;\n\n        if(urlBefore !== urlAfter){\n            // 重新加载应用 传入事件源\n            urlReroute(new PopStateEvent('popstate'));\n        }\n    }\n}\n\n\nwindow.history.pushState = patchedUpdateState(window.history.pushState,'pushState');\nwindow.history.replaceState = patchedUpdateState(window.history.replaceState,'replaceState');\n\n// 用户可能还会绑定自己的路由事件 vue\n\n\n// 当我们应用切换后，还需要处理原来的方法，需要在应用切换后在执行","import { started } from \"../start\";\nimport { getAppChanges } from \"../applications/app\";\nimport { toLoadPromise } from \"../lifecycles/load\";\nimport { toUnmountPromise } from \"../lifecycles/unmount\";\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap\";\nimport { toMountPromise } from \"../lifecycles/mount\";\n\nimport './navigator-events'\n\n\n// 核心应用处理方法\nexport function reroute() {\n    //  需要获取要加载的应用\n    //  需要获取要被挂载的应用\n    //  哪些应用需要被卸载\n    const { appsToLoad, appsToMount, appsToUnmount } = getAppChanges();\n    // start方法调用时是同步的，但是加载流程是异步饿\n    if (started) {\n        // app装载\n        return performAppChanges();\n    } else {\n        // 注册应用时 需要预先加载\n        return loadApps();\n    }\n    async function loadApps() { // 预加载应用\n        let apps = await Promise.all(appsToLoad.map(toLoadPromise)); // 就是获取到bootstrap,mount和unmount方法放到app上\n       \n    }\n    async function performAppChanges() { // 根据路径来装载应用\n        // 先卸载不需要的应用 \n        let unmountPromises = appsToUnmount.map(toUnmountPromise); // 需要去卸载的app\n        // 去加载需要的应用\n\n        // 这个应用可能需要加载 但是路径不匹配  加载app1 的时候，这个时候切换到了app2\n        appsToLoad.map(async (app)=>{ // 将需要求加载的应用拿到 => 加载 => 启动 => 挂载\n            app = await toLoadPromise(app); \n            app = await toBootstrapPromise(app);\n            return toMountPromise(app);\n        })\n        appsToMount.map(async (app)=>{\n            app = await toBootstrapPromise(app);\n            return toMountPromise(app);\n        });\n    }   \n}\n\n// 这个流程是用于初始化操作的，我们还需要 当路径切换时重新加载应用\n// 重写路由相关的方法","import { NOT_LOADED, shouldBeActive, LOADING_SOURCE_CODE, NOT_BOOTSTRAPPED, NOT_MOUNTED, BOOTSTRAPPING, MOUNTED } from \"./app.helpers\";\nimport { reroute } from \"../navigations/reroute\";\n/**\n * \n * @param {*} appName  应用名字\n * @param {*} loadApp  加载的应用\n * @param {*} activeWhen  当激活时会调用 loadApp\n * @param {*} customProps 自定义属性\n */\nconst apps = []; // 用来存放所有的应用\n// 维护应用所有的状态 状态机\nexport function registerApplication(appName, loadApp, activeWhen, customProps) {\n    apps.push({\n        name: appName,\n        loadApp,\n        activeWhen,\n        customProps,\n        status: NOT_LOADED\n    });\n    reroute(); // 加载应用\n}\nexport function getAppChanges(){\n    const appsToUnmount = []; // 要卸载的app\n    const appsToLoad = []; // 要加载的app\n    const appsToMount = []; // 需要挂载的\n    apps.forEach(app=>{\n        // 需不需要被加载\n        const appSholdBeActive = shouldBeActive(app);\n        switch (app.status) { // toLoad\n            case NOT_LOADED: \n            case LOADING_SOURCE_CODE:\n                if(appSholdBeActive){// 做判断了\n                    appsToLoad.push(app);\n                }\n                break\n            case NOT_BOOTSTRAPPED: // toMount\n            case BOOTSTRAPPING:\n            case NOT_MOUNTED:\n                if(appSholdBeActive){\n                    appsToMount.push(app);\n                }\n                break;\n            case MOUNTED:  // unmount\n                if(!appSholdBeActive){\n                    appsToUnmount.push(app)\n                }\n        }\n    });\n    return {appsToUnmount,appsToLoad,appsToMount}\n}"],"names":[],"mappings":"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"}